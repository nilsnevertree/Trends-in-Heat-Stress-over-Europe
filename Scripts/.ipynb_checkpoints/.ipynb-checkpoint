{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "import xarray as xr\n",
    "import Calculation.trend_func as trends\n",
    "\n",
    "data = xr.open_dataset('/home/nniebaum/data_nils/europe_full_daymax_1900-01-01_2010-12-31.nc')\n",
    "data_self = xr.open_dataset('/home/nniebaum/data_nils/europe_full_daily_max_1900-01-01_2010-12-31.nc')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "quantile = [0.9,0.95,0.98]\n",
    "\n",
    "data_2 = xr.open_dataset('/home/nniebaum/data_nils/europe_full_daily_max_quant_detrend_t2m_swbgt_1900-01-01_2010-12-31.nc')\n",
    "data[\"t2m_mask_quantiles\"] = data[\"t2m\"] >= data[\"t2m\"].quantile(quantile)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "from cdo import *\n",
    "cdo = Cdo()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on method get in module cdo:\n",
      "\n",
      "get(*args, **kwargs) method of cdo.Cdo instance\n",
      "    NAME\n",
      "        ydrunpctl - Multi-year daily running percentile values\n",
      "    \n",
      "    SYNOPSIS\n",
      "        ydrunpctl,p,nts  infile1 infile2 infile3 outfile\n",
      "    \n",
      "    DESCRIPTION\n",
      "        This operator writes running percentile values for each day of year in infile1 to outfile. \n",
      "        A certain percentile is computed for all timesteps in running windows of which the medium \n",
      "        timestep corresponds to a certain day of year. \n",
      "        The algorithm uses histograms with minimum and maximum bounds given in infile2 and infile3,\n",
      "        respectively. The default number of histogram bins is 101. The default can be overridden\n",
      "        by setting the environment variable CDO_PCTL_NBINS to a different value. The files infile2 \n",
      "        and infile3 should be the result of corresponding ydrunmin and ydrunmax operations, respectively.\n",
      "        The date information in an output field is the date of the timestep in the middle of the last contributing running window.\n",
      "        Note that the operator have to be applied to a continuous time series of daily measurements \n",
      "        in order to yield physically meaningful results. Also note that the output time series begins\n",
      "        (nts-1)/2 timesteps after the first timestep of the input time series and ends (nts-1)/2 \n",
      "        timesteps before the last.\n",
      "        For input data which are complete but not continuous, such as time series of daily measurements \n",
      "        for the same month or season within different years, the operator only yields physically meaningful \n",
      "        results if the input time series does include the (nts-1)/2 days before and after each period \n",
      "        of interest.\n",
      "        \n",
      "        o(001,x) = pth percentile {i(t,x), i(t+1,x), ..., i(t+nts-1,x); day[(i(t+(nts-1)/2)] = 001}\n",
      "                         ...\n",
      "        o(366,x) = pth percentile {i(t,x), i(t+1,x), ..., i(t+nts-1,x); day[(i(t+(nts-1)/2)] = 366}\n",
      "    \n",
      "    PARAMETER\n",
      "        p    FLOAT    Percentile number in {0, ..., 100}\n",
      "        nts  INTEGER  Number of timesteps\n",
      "    \n",
      "    ENVIRONMENT\n",
      "        CDO_PCTL_NBINS\n",
      "            Sets the number of histogram bins. The default number is 101.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(cdo.ydrunpctl)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [],
   "source": [
    "minf = xr.open_dataset('/home/nniebaum/data_nils/minfile')\n",
    "infile = xr.open_dataset('/home/nniebaum/data_nils/europe_all_1900-01-01_1930-12-31.nc')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([6.0780000e+03, 1.7148900e+05, 1.1474420e+06, 4.1731120e+06,\n",
       "        1.6489387e+07, 3.2118530e+07, 2.7172745e+07, 9.3022390e+06,\n",
       "        1.1939300e+06, 6.9112000e+04]),\n",
       " array([-44.795883 , -35.58916  , -26.38244  , -17.175718 ,  -7.968997 ,\n",
       "          1.2377243,  10.444446 ,  19.651167 ,  28.85789  ,  38.06461  ,\n",
       "         47.27133  ], dtype=float32),\n",
       " <BarContainer object of 10 artists>)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "of.t2m.plot()\n",
    "infile.t2m.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "def calc_mask_ydrunpctl(data, cdo_data, variable = \"t2m\", mutable = False) :\n",
    "    \n",
    "    # get vector with corresponding months and days for the data\n",
    "    months_data = data.time.dt.month\n",
    "    days_data = data.time.dt.day\n",
    "    \n",
    "    # get vector with corresponding months and days for the cdo processed data\n",
    "    time_of = cdo_data.time\n",
    "    months_of = cdo_data.time.dt.month\n",
    "    days_of = cdo_data.time.dt.day\n",
    "\n",
    "    # create tuples with month and day for each timestep of the processed data\n",
    "    tuples = []\n",
    "    for of_step in time_of:\n",
    "        tuples.append((of_step.dt.month.values, of_step.dt.day.values))\n",
    "    \n",
    "    # result will save the mask\n",
    "    result = (data.[variable] * 0).astype(bool)\n",
    "    for step in tuples:\n",
    "        mask_data = ((step[0] == months_data) & (step[1] == days_data))\n",
    "        mask_of = ((step[0] == months_of) & (step[1] == days_of))\n",
    "\n",
    "        result = data.[variable].sel(time = mask_data) >= cdo_data.[variable].sel(time = mask_of)\n",
    "        result[mask_data] = result[mask_data]  + mask.values\n",
    "    \n",
    "    return result if not mutable else "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['1900-01-01T00:00:00.000000000', '1900-01-01T06:00:00.000000000',\n",
       "       '1900-01-01T12:00:00.000000000', ...,\n",
       "       '1930-12-31T06:00:00.000000000', '1930-12-31T12:00:00.000000000',\n",
       "       '1930-12-31T18:00:00.000000000'], dtype='datetime64[ns]')"
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "infile.time.values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "positional argument follows keyword argument (<ipython-input-171-cc6d71c40fcf>, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-171-cc6d71c40fcf>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    cdo.ydrunpctl(90,30, -ydrunmin, input = ip, -ydrunmax, input = ip, output = '/home/nniebaum/data_nils/perct.nc')\u001b[0m\n\u001b[0m                                               ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m positional argument follows keyword argument\n"
     ]
    }
   ],
   "source": [
    "ip = '/home/nniebaum/data_nils/europe_all_1980-01-01_2010-12-31.nc'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [],
   "source": [
    "std = xr.open_dataset('/home/nniebaum/data_nils/firststd.nc')\n",
    "\n",
    "mean = xr.open_dataset('/home/nniebaum/data_nils/firstmean.nc')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fb2a83ee1d0>]"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "std.t2m.isel(longitude = 10, latitude = 10 ).plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fb2a82e1a50>]"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(mean + 2*std).t2m.isel(longitude = 10, latitude = 10 ).plot()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "py3_std",
   "language": "python",
   "name": "py3_std"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
